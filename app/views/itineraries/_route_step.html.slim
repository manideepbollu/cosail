.row
  .col-sm-4
    = f.text_field :start_address, id: 'custom_start_address', autocomplete: 'off'
    .coords id='start_coords'
      = 'Coordinates: '
    = f.text_field :end_address, id: 'custom_end_address', autocomplete: 'off'
    .coords id='end_coords'
      = 'Coordinates: '
    = f.hidden_field :start_port_id
    = f.hidden_field :end_port_id
    #result.alert.alert-info
      = t('.distance')
      b#distance<
      br
      = t('.duration')
      b#duration<
    = f.button t('.get_route'), type: 'button', class: 'btn btn-primary', id: 'get-route'
    = image_tag 'ajax-spinner-24x17.gif', width: 24, height: 17, alt: '...', id: 'itineraries-spinner', class: 'hide'
    #error.alert.alert-danger
  .col-sm-8
    #new-itinerary-map.google-maps
.row
  .col-sm-4
    h3
      span.fa.fa-eye-slash<>
      = t('.hint_privacy_title')
    p
      = t('.hint_privacy_content')
  .col-sm-4
    h3
      span.fa.fa-wrench<>
      = t('.hint_customize_title')
    p
      = t('.hint_customize_content')
  .col-sm-4
    h3
      span.fa.fa-search<>
      = t('.hint_search_before_title')
    p
      = t('.hint_search_before_content', search_link: (link_to t('.search_link'), itineraries_path)).html_safe

javascript:
    $(document).ready(function() {

      var suggestArr = [];

      $("input#custom_start_address").autocomplete({
        source: function (request, response) {
          autoCompleteSource(request);
          response(suggestArr);
        },
        minLength: 4,
        select: function (event, ui) {
          event.preventDefault();
          $("input#itinerary_start_port_id").val(ui.item.value);
          $("input#custom_start_address").val(ui.item.label);
          $("#start_coords").html('Coords: '+ui.item.lat+', '+ui.item.lon);
          suggestArr = [];
          setStartMarker(ui.item.lat, ui.item.lon, ui.item.label);
        }
      });

      $("input#custom_end_address").autocomplete({
        source: function(request, response) {
          autoCompleteSource(request);;
          response (suggestArr);
        },
        minLength: 4,
        select: function (event, ui) {
          event.preventDefault();
          $("input#itinerary_end_port_id").val(ui.item.value);
          $("input#custom_end_address").val(ui.item.label);
          $("#end_coords").html('Coords: '+ui.item.lat+', '+ui.item.lon);
          suggestArr = [];
          setEndMarker(ui.item.lat, ui.item.lon, ui.item.label);
        }
      });

      function autoCompleteSource(request){
        $.ajax({
          type: "GET",
          url: "http://localhost:3000/ports/suggest.json?sp=" + request.term, // change to full path of file on server
          dataType: "json",
          success: parseJson,
          failure: function (data) {
            console.log("XML File could not be found");
          }
        });
      }

      function parseJson(data) {
        var count = data.length;
        suggestArr = [];
        for (var i = 0; i < count; i++) {
          suggestArr.push({
            label: data[i].name+' - '+data[i].nationality,
            value: data[i].portId,
            lat: data[i].lat,
            lon: data[i].lon
          });
        }
        console.log(suggestArr);
      }


      $("#get-route").click(function () {
        var startPort = document.getElementById('itinerary_start_port_id').value;
        var endPort = document.getElementById('itinerary_end_port_id').value;
        if(startPort == '' || endPort == '')
          alert('Please choose Start and End addresses for your itinerary.')
        else{
          document.getElementById("itineraries-spinner").className = "";
          $.ajax({
            type: "GET",
            url: "http://localhost:3000/ports/route.json?fport=" + startPort + "&tport=" + endPort, // change to full path of file on server
            dataType: "json",
            success: function(data){
              $("#distance").html(data.distance);
              $("#duration").html(data.duration);
              drawRoute(data.coords);
            },
            failure: function (data) {
              console.log("XML File could not be found");
            }
          });
        }
      });

  });
    /**
     * Created by alwaysbollu on 16/12/15.
     */
    var startMarker;
    var endMarker;
    var map;
    var totalMarkers = [];
    var routePath;

    function initMap() {
      map = new google.maps.Map(document.getElementById('new-itinerary-map'), {
        center: {lat: -34.397, lng: 150.644},
        zoom: 5,
        maxZoom: 10
      });
    }

    function setStartMarker(lat, lon, label) {
      var latLng = {lat: lat, lng: lon};
      map.setCenter(latLng);
      if(startMarker != null)
        startMarker.setMap(null);
      startMarker = new google.maps.Marker({
        position: latLng,
        map: map,
        title: label,
        animation: google.maps.Animation.DROP
      });
      adjustBoundaries();
    }

    function setEndMarker(lat, lon, label) {
      var latLng = {lat: lat, lng: lon};
      map.setCenter(latLng);
      if(endMarker != null)
        endMarker.setMap(null);
      endMarker = new google.maps.Marker({
        position: latLng,
        map: map,
        title: label,
        animation: google.maps.Animation.DROP
      });
      adjustBoundaries();
    }

    function adjustBoundaries(){
      var bounds = new google.maps.LatLngBounds();
      if(startMarker != null)
        bounds.extend(startMarker.getPosition());
      if(endMarker != null)
        bounds.extend(endMarker.getPosition());
      map.fitBounds(bounds);
      if (routePath != null)
        routePath.setMap(null);
    }

    function drawRoute(data){
      var routeCoordinates = data;
      adjustBoundaries();
      routePath = new google.maps.Polyline({
        path: routeCoordinates,
        geodesic: true,
        strokeColor: '#FF0000',
        strokeOpacity: 1.0,
        strokeWeight: 2
      });
      routePath.setMap(map);
      document.getElementById("itineraries-spinner").className = "hide";
      $("#result").slideDown("slow", function () {
        // Animation complete.
      });
    }